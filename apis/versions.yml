openapi: 3.0.3
info:
  title: Version API
  description: |-
    This API provides a comprehensive set of services for managing versions and the associated product catalog within the DealHub CPQ system. It allows for system-to-system integration to get, create, duplicate, activate, and manage the content of versions.

    Several operations, such as duplicating, activating, and uploading a product catalog, are asynchronous. These endpoints return a `request_id` for tracking.

    All requests require a secret Bearer Token in the `Authorization` header, which is generated by a CPQ administrator.
  version: 1.0.0
servers:
  - url: https://api.dealhub.io
    description: The base URL for your DealHub instance.
    variables:
      your-dealhub-instance:
        default: app
        description: Your specific DealHub instance name (e.g., 'app', 'service-eu1').

security:
  - bearerAuth: []

tags:
  - name: Version Management
    description: Endpoints for retrieving, creating, and managing versions.
  - name: Product Catalog
    description: Endpoints for managing the product catalog within a specific version.
  - name: Asynchronous Operations
    description: Endpoints for tracking the status of asynchronous requests.
  - name: Beta
    description: New endpoints that are currently in beta.

paths:
  /api/v1/version/id/{version_id}:
    get:
      tags:
        - Version Management
      summary: Get Version by ID
      description: Retrieve a specific Version based on its unique DealHub ID.
      operationId: getVersionById
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The unique identifier of the version.
      responses:
        '200':
          description: Success. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
              examples:
                getVersionExample:
                  summary: Successful response
                  value:
                    name: "Master v1"
                    comment: ""
                    status: "ACTIVE"
                    version_id: "67657"
  /api/v1/version/name/{version_name}:
    get:
      tags:
        - Version Management
      summary: Get Version by Name
      description: Retrieve a specific Version based on its name.
      operationId: getVersionByName
      parameters:
        - name: version_name
          in: path
          required: true
          schema:
            type: string
            maxLength: 120
          description: The name of the version.
      responses:
        '200':
          description: Success. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
              examples:
                getVersionExample:
                  summary: Successful response
                  value:
                    name: "Master v1"
                    comment: ""
                    status: "ACTIVE"
                    version_id: "67657"

  /api/v1/versions:
    get:
      tags:
        - Version Management
      summary: Get a List of Versions
      description: Retrieve a list of Versions, with an option to filter by status. If no parameters are provided, it returns all versions.
      operationId: getVersions
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [DRAFT, ACTIVE, DEACTIVATED]
          description: Search for Version(s) based on status.
      responses:
        '200':
          description: Success. Returns a list of version objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
              examples:
                getVersionsExample:
                  summary: Example list of versions
                  value:
                    - name: "v3a"
                      comment: ""
                      status: "DEACTIVATED"
                      version_id: "068DoObdli5GuF14"
                    - name: "msd6"
                      comment: ""
                      status: "DEACTIVATED"
                      version_id: "0AjX3aABgLN9f8uG"

  /api/v2/version/duplicate:
    post:
      tags:
        - Version Management
      summary: Duplicate a Version
      description: Asynchronously creates a new Version entity based on an existing one. This operation returns a `request_id` for tracking.
      operationId: duplicateVersion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateVersionRequest'
            examples:
              duplicateVersionExample:
                summary: Duplicate a version to a new instance
                value:
                  version_id: "765379899"
                  new_version_name: "New Version"
                  comment: "Adding more BroadBand services"
                  to_account_instance: "Account abc"
      responses:
        '200':
          description: Success. The duplication process has started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponse'
              examples:
                asyncResponseExample:
                  summary: Successful response
                  value:
                    request_id: "4D114DAD97"

  /api/v1/version/activate:
    post:
      tags:
        - Version Management
      summary: Activate a Version
      description: Asynchronously activates a `DRAFT` Version. This operation returns a `request_id` for tracking.
      operationId: activateVersion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateVersionRequest'
            examples:
              activateVersionExample:
                summary: Request to activate a version
                value:
                  version_id: "765379899"
      responses:
        '200':
          description: Success. The activation process has started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponse'
              examples:
                asyncResponseExample:
                  summary: Successful response
                  value:
                    request_id: "4D114DAD97"

  /api/v1/version/{version_id}/products:
    get:
      tags:
        - Product Catalog
      summary: Get Products of a Version 
      description: |-
        Retrieves a paginated list of products for a specific version, returning basic product attributes and price details.
        - `DRAFT` Status: Returns the full product list.
        - `ACTIVE`/`DEACTIVATED` Status: Can return either all products or only products that were new or modified compared to the previously active version.
      operationId: getVersionProducts
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The unique identifier of the Version.
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 10000
          description: The number of products to skip for pagination.
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          description: The maximum number of products to return. If the requested `limit` value exceeds the maximum allowed limit, the system will automatically cap the result set at the maximum limit.
        - name: product_option
          in: query
          schema:
            type: string
            enum: [ALL, MODIFIED]
            default: ALL
          description: Specify whether to fetch all products or only new/updated products.
        - name: pricing_option
          in: query
          schema:
            type: string
            enum: [MIN, MAX, FIRST]
            default: MIN
          description: For products with multiple fixed prices, specifies which price to return (Minimum, Maximum, or First defined).
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProductsResponse'
              examples:
                getVersionProductsExample:
                  summary: Successful response
                  value:
                    info:
                      version_id: "76472"
                      version_status: "ACTIVE"
                      compared_with_version_id: "76326"
                      more_results_matching_the_request: true
                      offset: "1"
                      limit: "25"
                    products:
                      - sku: "56545"
                        name: "Product A"
                        type: "PRODUCT"
                        description: "Description of product A"
                        price:
                          EUR: "10"
                          USD: "12.5"
                        attributes:
                          - attr_x: "value X"
                          - attr_y: "value Y"
                      - sku: "56546"
                        name: "Product B"
                        type: "PRODUCT"
                        description: "Description of product B"
                        price:
                          EUR: "18"
                          USD: "21.5"
                        attributes:
                          - attr_x: "value XX"
                          - attr_y: "value YY"
                      - sku: "56545_b"
                        name: "Bundle X"
                        type: "BUNDLE"
                        description: "Description of bundle X"
                        price:
                          EUR: "10"
                        attributes:
                          - attr_x: "value XYZ"
                          - attr_y: "value YZ"
                        bundle_items:
                          - "56545"
                          - "56546"
  /api/v1/version/product_by_sku:
    post:
      tags:
        - Product Catalog
      summary: Get Products by SKU 
      description: |- 
        Retrieves basic details for a specific list of products from the catalog based on their SKUs.

        > 📘
        > If some SKUs could not be found in a specific Version the system will return status 200, with error in the `info` structure.
      operationId: getProductsBySku
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsBySkuRequest'
            examples:
              getProductsBySkuExample:
                summary: Request specific products by SKU
                value:
                  version_id: "23687268JS5"
                  pricing_option: "MAX"
                  sku:
                    - "Sku-123-dvvv"
                    - "Sku-123-dvv2"
                    - "Sku-123-dvv3"
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProductsResponse'
              examples:
                getVersionProductsExample:
                  summary: Successful response
                  value:
                    info:
                      version_id: "76472"
                      version_status: "ACTIVE"
                      compared_with_version_id: "76326"
                      more_results_matching_the_request: true
                      offset: "1"
                      limit: "25"
                    products:
                      - sku: "56545"
                        name: "Product A"
                        type: "PRODUCT"
                        description: "Description of product A"
                        price:
                          EUR: "10"
                          USD: "12.5"
                        attributes:
                          - attr_x: "value X"
                          - attr_y: "value Y"
                      - sku: "56546"
                        name: "Product B"
                        type: "PRODUCT"
                        description: "Description of product B"
                        price:
                          EUR: "18"
                          USD: "21.5"
                        attributes:
                          - attr_x: "value XX"
                          - attr_y: "value YY"
                      - sku: "56545_b"
                        name: "Bundle X"
                        type: "BUNDLE"
                        description: "Description of bundle X"
                        price:
                          EUR: "10"
                        attributes:
                          - attr_x: "value XYZ"
                          - attr_y: "value YZ"
                        bundle_items:
                          - "56545"
                          - "56546"

  /api/v1/version/products_excel/{version_id}:
    get:
      tags:
        - Product Catalog
      summary: Extract Products to Excel
      description: Retrieves all product-related information for a specific version in an Excel file format.
      operationId: extractProductsExcel
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The unique identifier of the Version.
      responses:
        '200':
          description: Success. Returns the Excel file as a byte array.
          content:
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary

  /api/v1/version/{version_id}/products_catalog:
    get:
      tags:
        - Product Catalog
      summary: Get Product Catalog 
      description: Retrieves paginated information about products and bundles in the catalog, including attributes, assignments, and pricing details.
      operationId: getProductCatalog
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The unique identifier of the Version.
        - name: sku
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            maxItems: 100
          description: |- 
            One or more product SKUs to filter the result. Can be used multiple times (e.g., `?sku=SKU001&sku=SKU002`).

            If none of the provided SKUs match, the service will return an empty list.

            In case you inform a list of SKUs, ‘limit’ and ‘offset’ parameters on request will be ignored if provided.
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
          description: The number of products to skip for pagination.
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
          description: The maximum number of products to return.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCatalogGetResponse'
              examples:
                getProductCatalogExample:
                  summary: Successful response
                  value:
                    products:
                      - sku: "ABC-12345-S-BL"
                        name: "GRM Service"
                        description: "GRM Service\n"
                        tags: []
                        primary_tag: null
                        merge_products: false
                        product_attributes:
                          Department:
                            type: "NUMBER"
                            value: "1022"
                          Model:
                            type: "TEXT"
                            value: "01-200-GRM-M"
                          Manufacture Date:
                            type: "DATE"
                            value: "May 31, 2024"
                        product_assignments:
                          - assignment: "RULE_BASED"
                            playbook: "Master_playbook_24"
                            assignment_rules:
                              - ordinal: 0
                                name: "Seasonal assignment"
                                rule: "[General.partner_program] = \"Direct Sales\""
                                note: null
                                product_factors:
                                  - name: "Duration"
                                    value: "12"
                                    applicable: true
                                  - name: "Quantity"
                                    value: "1"
                                    applicable: true
                                  - name: "Sits"
                                    value: "1"
                                    applicable: false
                                proposal_attributes:
                                  - name: "custom_proposal_attribute"
                                    value: "Direct"
                                    applicable: true
                        product_pricing:
                          advanced: true
                          pricing_rules:
                            - playbook: "Master_playbook_24"
                              ordinal: 0
                              currency: null
                              rule: ""
                              price: "0"
                              level: 0
                              note: null
                              price_format: "BASIC"
                              rounding_policy: null
                              dynamic_price: false
                              name: null
                              price_type: "SOLID"
                              apply_to: "GENERATED_ITEMS"
                              apply_to_templates: ""
                              apply_to_rules: ""
                              max_discount: "100"
                              default_discount: "0"
                              based_of_tags: ""
                              based_of_price: null
                              limit_type: "AS_IS"
                              limit_min_value: null
                              limit_max_value: null
                              disable_rounding: false
                              include_positive: false
                              volume_discount: {}
                            - playbook: "Master_playbook_24"
                              ordinal: 1
                              currency: null
                              rule: "true"
                              price: "888"
                              level: 0
                              note: null
                              price_format: "ADVANCED"
                              rounding_policy: null
                              dynamic_price: false
                              name: null
                              price_type: "SOLID"
                              apply_to: "GENERATED_ITEMS"
                              apply_to_templates: ""
                              apply_to_rules: ""
                              max_discount: "100"
                              default_discount: "0"
                              based_of_tags: ""
                              based_of_price: null
                              limit_type: "AS_IS"
                              limit_min_value: null
                              limit_max_value: null
                              disable_rounding: false
                              include_positive: false
                              volume_discount: {}
                        product_conditional_names: []
                    bundles:
                      - sku: "Products summary"
                        name: "Products summary"
                        description: "<p>Products summary</p>\n"
                        tags:
                          - "Products summary"
                        primary_tag: "Products summary"
                        product_attributes:
                          Department:
                            type: "NUMBER"
                            value: "1111"
                          Model:
                            type: "TEXT"
                            value: "1117"
                          Manufacture Date:
                            type: "DATE"
                            value: "1111"
                        product_assignments:
                          - assignment: "RULE_BASED"
                            playbook: "Master_playbook_24"
                            assignment_rules:
                              - ordinal: 0
                                name: "bundle3"
                                rule: "[FixedSummary_bundles.Add_products_summary_bundle] = \"Yes\""
                                note: null
                                product_factors:
                                  - name: "Duration"
                                    value: "1"
                                    applicable: false
                                  - name: "Quantity"
                                    value: "1"
                                    applicable: true
                                  - name: "Sits"
                                    value: "1"
                                    applicable: false
                                proposal_attributes:
                                  - name: "custom_proposal_attribute"
                                    value: ""
                                    applicable: true
                        product_pricing:
                          advanced: false
                          pricing_rules:
                            - playbook: "Master_playbook_24"
                              ordinal: 0
                              currency: null
                              rule: ""
                              price: "50"
                              level: 0
                              note: null
                              price_format: "BASIC"
                              rounding_policy: null
                              dynamic_price: false
                              name: null
                              price_type: "FROM_ALL_QUOTE"
                              apply_to: "GENERATED_ITEMS"
                              apply_to_templates: ""
                              apply_to_rules: ""
                              max_discount: "100"
                              default_discount: "0"
                              based_of_tags: ""
                              based_of_price: null
                              limit_type: "AS_IS"
                              limit_min_value: null
                              limit_max_value: null
                              disable_rounding: false
                              include_positive: false
                              volume_discount: {}
                        product_conditional_names: []
                        bundle_type: "PRODUCT_SUMMARY"
                        price_in_bundle_is_zero: false
                        sync_to_crm: true
                        sync_bundle_price: false
                        bundle_items:
                          - sku: "Product2"
                            ordinal: 1
                            how_to_add: "AUTOMATIC"
                            enable_modify_factors: false
                            product_factors:
                              - name: "Duration"
                                value: "1"
                                applicable: true
                              - name: "Quantity"
                                value: "2"
                                applicable: true
                              - name: "Sits"
                                value: "1"
                                applicable: true
                          - sku: "Product3"
                            ordinal: 2
                            how_to_add: "MANUAL"
                            enable_modify_factors: true
                            product_factors:
                              - name: "Duration"
                                value: "1"
                                applicable: true
                              - name: "Quantity"
                                value: "3"
                                applicable: true
                              - name: "Sits"
                                value: "0"
                                applicable: true
                          - sku: "Product1"
                            ordinal: 0
                            how_to_add: "AUTOMATIC"
                            enable_modify_factors: true
                            product_factors:
                              - name: "Duration"
                                value: "1"
                                applicable: true
                              - name: "Quantity"
                                value: "1"
                                applicable: true
                              - name: "Sits"
                                value: "0"
                                applicable: true
                          - sku: "Product4"
                            ordinal: 3
                            how_to_add: "COMBINED"
                            enable_modify_factors: false
                            product_factors:
                              - name: "Duration"
                                value: "1"
                                applicable: true
                              - name: "Quantity"
                                value: "4"
                                applicable: true
                              - name: "Sits"
                                value: "1"
                                applicable: true
                    info:
                      version_id: "7b34133847401b12"
                      version_status: "DRAFT"
                      more_results_matching_the_request: false
                      limit: 100
                      offset: 0
    post:
      tags:
        - Product Catalog
      summary: Create or Update Product Catalog
      description: |-
        This endpoint asynchronously uploads a complete product catalog to a `DRAFT` version. Each product and bundle is created or updated based on the details in the request JSON.

        If a SKU already exists in the catalog, it will be completely replaced with the new data from the request, including its pricing, assignments, and other details. If the replacement process fails for any reason, the system will revert to the old product definition.

        This operation returns a `request_id` for you to track the progress. Note that requests targeting an `ACTIVE` or `DEACTIVATED` catalog version will fail.
      operationId: uploadProductCatalog
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The identifier of the 'DRAFT' version to upload the catalog to.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCatalogPostRequest'
            examples:
              productCatalogExample:
                summary: Request example
                value:
                  products:
                    - sku: "ABC-12345-S-BL"
                      name: "GRM Service"
                      description: "GRM Service\n"
                      tags: []
                      primary_tag: null
                      merge_products: false
                      product_attributes:
                        Department:
                          value: "1022"
                        Model:
                          value: "01-200-GRM-M"
                        Manufacture Date:
                          value: "May 31, 2024"
                      product_assignments:
                        - assignment: "RULE_BASED"
                          playbook: "Master_playbook_24"
                          assignment_rules:
                            - ordinal: 0
                              name: "Seasonal assignment"
                              rule: "[General.partner_program] = \"Direct Sales\""
                              note: null
                              product_factors:
                                - name: "Duration"
                                  value: "12"
                                  applicable: true
                                - name: "Quantity"
                                  value: "1"
                                  applicable: true
                                - name: "Sits"
                                  value: "1"
                                  applicable: false
                              proposal_attributes:
                                - name: "custom_proposal_attribute"
                                  value: "Direct"
                                  applicable: true
                      product_pricing:
                        advanced: true
                        pricing_rules:
                          - playbook: "Master_playbook_24"
                            ordinal: 0
                            currency: null
                            rule: ""
                            price: "0"
                            level: 0
                            note: null
                            price_format: "BASIC"
                            rounding_policy: null
                            dynamic_price: false
                            name: null
                            price_type: "SOLID"
                            apply_to: "GENERATED_ITEMS"
                            apply_to_templates: ""
                            apply_to_rules: ""
                            max_discount: "100"
                            default_discount: "0"
                            based_of_tags: ""
                            based_of_price: null
                            limit_type: "AS_IS"
                            limit_min_value: null
                            limit_max_value: null
                            disable_rounding: false
                            include_positive: false
                            volume_discount: {}
                          - playbook: "Master_playbook_24"
                            ordinal: 1
                            currency: null
                            rule: "true"
                            price: "888"
                            level: 0
                            note: null
                            price_format: "ADVANCED"
                            rounding_policy: null
                            dynamic_price: false
                            name: null
                            price_type: "SOLID"
                            apply_to: "GENERATED_ITEMS"
                            apply_to_templates: ""
                            apply_to_rules: ""
                            max_discount: "100"
                            default_discount: "0"
                            based_of_tags: ""
                            based_of_price: null
                            limit_type: "AS_IS"
                            limit_min_value: null
                            limit_max_value: null
                            disable_rounding: false
                            include_positive: false
                            volume_discount: {}
                      product_conditional_names: []
                  bundles:
                    - sku: "Products summary"
                      name: "Products summary"
                      description: "<p>Products summary</p>\n"
                      tags:
                        - "Products summary"
                      primary_tag: "Products summary"
                      product_attributes:
                        Department:
                          value: ""
                        Model:
                          value: ""
                        Manufacture Date:
                          value: ""
                      product_assignments:
                        - assignment: "RULE_BASED"
                          playbook: "Master_playbook_24"
                          assignment_rules:
                            - ordinal: 0
                              name: "bundle3"
                              rule: "[FixedSummary_bundles.Add_products_summary_bundle] = \"Yes\""
                              note: null
                              product_factors:
                                - name: "Duration"
                                  value: "1"
                                  applicable: false
                                - name: "Quantity"
                                  value: "1"
                                  applicable: true
                                - name: "Sits"
                                  value: "1"
                                  applicable: false
                              proposal_attributes:
                                - name: "custom_proposal_attribute"
                                  value: ""
                                  applicable: true
                      product_pricing:
                        advanced: false
                        pricing_rules:
                          - playbook: "Master_playbook_24"
                            ordinal: 0
                            currency: null
                            rule: ""
                            price: "50"
                            level: 0
                            note: null
                            price_format: "BASIC"
                            rounding_policy: null
                            dynamic_price: false
                            name: null
                            price_type: "FROM_ALL_QUOTE"
                            apply_to: "GENERATED_ITEMS"
                            apply_to_templates: ""
                            apply_to_rules: ""
                            max_discount: "100"
                            default_discount: "0"
                            based_of_tags: ""
                            based_of_price: null
                            limit_type: "AS_IS"
                            limit_min_value: null
                            limit_max_value: null
                            disable_rounding: false
                            include_positive: false
                            volume_discount: {}
                      product_conditional_names: []
                      bundle_type: "PRODUCT_SUMMARY"
                      price_in_bundle_is_zero: false
                      sync_to_crm: true
                      sync_bundle_price: false
                      bundle_items:
                        - sku: "Product2"
                          ordinal: 1
                          how_to_add: "AUTOMATIC"
                          enable_modify_factors: false
                          product_factors:
                            - name: "Duration"
                              value: "1"
                              applicable: true
                            - name: "Quantity"
                              value: "2"
                              applicable: true
                            - name: "Sits"
                              value: "1"
                              applicable: true
                        - sku: "Product3"
                          ordinal: 2
                          how_to_add: "MANUAL"
                          enable_modify_factors: true
                          product_factors:
                            - name: "Duration"
                              value: "1"
                              applicable: true
                            - name: "Quantity"
                              value: "3"
                              applicable: true
                            - name: "Sits"
                              value: "0"
                              applicable: true
                        - sku: "Product1"
                          ordinal: 0
                          how_to_add: "AUTOMATIC"
                          enable_modify_factors: true
                          product_factors:
                            - name: "Duration"
                              value: "1"
                              applicable: true
                            - name: "Quantity"
                              value: "1"
                              applicable: true
                            - name: "Sits"
                              value: "0"
                              applicable: true
                        - sku: "Product4"
                          ordinal: 3
                          how_to_add: "COMBINED"
                          enable_modify_factors: false
                          product_factors:
                            - name: "Duration"
                              value: "1"
                              applicable: true
                            - name: "Quantity"
                              value: "4"
                              applicable: true
                            - name: "Sits"
                              value: "1"
                              applicable: true
      responses:
        '200':
          description: Success. The upload process has started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponse'
              examples:
                uploadProductCatalogExample:
                  summary: Successful response
                  value:
                    request_id: "4D114DAD97"


  /api/v1/version/{version_id}/products_catalog/all:
    delete:
      tags:
        - Product Catalog
      summary: Delete All Products from Catalog
      description: |-
        Deletes all products and the entire product hierarchy tree from a `DRAFT` version.
        * This operation can only be triggered for a catalog version with a **`DRAFT`** status.
        * Requests made for an `ACTIVE` or `DEACTIVATED` catalog version will fail with a `400 Bad Request` HTTP error.
      operationId: deleteAllProducts
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The identifier of the 'DRAFT' version.
      responses:
        '200':
          description: Success. All products were deleted.
        '400':
          description: Bad Request. The operation cannot be performed on a catalog Version with a status of `ACTIVE` or `DEACTIVATED`.

  /api/v1/version/{version_id}/products_catalog/by_sku:
    delete:
      tags:
        - Product Catalog
      summary: Delete Specific Products by SKU
      description: |-
        Deletes specific products from the product catalog of a `DRAFT` version. 
        * This operation can only be triggered for a catalog version with a **`DRAFT`** status.
        * Requests made for an `ACTIVE` or `DEACTIVATED` catalog version will fail with a `400 Bad Request` HTTP error.

        A product cannot be deleted if it is:
        * A parent to another product in the hierarchy.
        * Marked as mandatory.
        * Set as an alternative in the hierarchy tree.
      operationId: deleteProductsBySku
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The identifier of the `DRAFT` version.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skus:
                  type: array
                  items:
                    type: string
            examples:
              deleteBySkuExample:
                summary: Delete two specific SKUs
                value:
                  skus:
                    - "SKU-1"
                    - "SKU-45"
      responses:
        '200':
          description: Success. Specified products were deleted.
        '400':
          description: Bad Request. 

  /api/beta/version/{version_id}/product-hierarchy:
    get:
      tags:
        - Product Hierarchy (Beta)
      summary: Get Product Hierarchy 
      description: Retrieves the product hierarchy tree for a specific version.
      operationId: getProductHierarchy
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The identifier of the version.
      responses:
        '200':
          description: Success. Returns the product hierarchy.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductHierarchyNode'
              examples:
                getProductHierarchyExample:
                  summary: Example of a product hierarchy response
                  value:
                    - element:
                        type: "PRODUCT"
                        mandatory: false
                        nameOrSku: "product 1"
                        alternative: false
                      children":
                        - element:
                            type: "PRODUCT"
                            mandatory: false
                            nameOrSku: "product 3"
                            alternative: false
                          children: []
                    - element:
                        type: "PRODUCT"
                        mandatory: false
                        nameOrSku: "product 4"
                        alternative: false
                      children:
                        - element:
                            type: "LABEL"
                            mandatory: true
                            nameOrSku: "Label A"
                            alternative: false
                          children:
                            - element:
                                type: "PRODUCT"
                                mandatory: false
                                nameOrSku: "product 5"
                                alternative: false
                              children: []
                            - element:
                                type: "PRODUCT"
                                mandatory: true
                                nameOrSku: "product 6"
                                alternative: false
                              children": []
                        - element:
                            type: "LABEL"
                            mandatory: false
                            nameOrSku: "Label B"
                            alternative: false
                          children:
                            - element:
                                type: "PRODUCT"
                                mandatory: false
                                nameOrSku: "product 1"
                                alternative: false
                              children:
                                - element:
                                    type: "PRODUCT"
                                    mandatory: false
                                    nameOrSku: "product 4"
                                    alternative: false
                                  children: []
    post:
      tags:
        - Product Hierarchy (Beta)
      summary: Create or Update Product Hierarchy 
      description: Asynchronously creates or updates the product hierarchy for a 'DRAFT' version. This operation returns a `request_id` for tracking.
      operationId: updateProductHierarchy
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The identifier of the 'DRAFT' version.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductHierarchyNode'
            examples:
              updateProductHierarchyExample:
                summary: Example of updating a product hierarchy
                value:
                  - element:
                      type: "PRODUCT"
                      mandatory: false
                      nameOrSku: "product 1"
                      alternative: false
                    children:
                      - element:
                          type: "PRODUCT"
                          mandatory: false
                          nameOrSku: "product 3"
                          alternative: false
                        children: []
                  - element:
                      type: "PRODUCT"
                      mandatory: false
                      nameOrSku: "product 4"
                      alternative: false
                    children:
                      - element:
                          type: "LABEL"
                          mandatory: true
                          nameOrSku: "Label A"
                          alternative: false
                        children:
                          - element:
                              type: "PRODUCT"
                              mandatory: false
                              nameOrSku: "product 5"
                              alternative: false
                            children: []
                          - element:
                              type: "PRODUCT"
                              mandatory: true
                              nameOrSku: "product 6"
                              alternative: false
                            children: []
                      - element:
                          type: "LABEL"
                          mandatory: false
                          nameOrSku: "Label B"
                          alternative: false
                        children:
                          - element:
                              type: "PRODUCT"
                              mandatory: false
                              nameOrSku: "product 1"
                              alternative: false
                            children:
                              - element:
                                  type: "PRODUCT"
                                  mandatory: false
                                  nameOrSku: "product 4"
                                  alternative: false
                                children: []
      responses:
        '200':
          description: Success. The update process has started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponse'
              
    delete:
      tags:
        - Product Hierarchy (Beta)
      summary: Delete from Product Hierarchy 
      description: Asynchronously deletes specified items (products, bundles, or labels) from the product hierarchy of a 'DRAFT' version.
      operationId: deleteFromProductHierarchy
      parameters:
        - name: version_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The identifier of the 'DRAFT' version.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items_to_delete:
                  type: array
                  items:
                    type: object
                    properties:
                      nameOrSku:
                        type: string
      responses:
        '200':
          description: Success. The deletion process has started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponse'

  /api/v1/request/{request_id}/status:
    get:
      tags:
        - Asynchronous Operations
      summary: Get Asynchronous Request Status
      description: Polls and retrieves the current status of a specific asynchronous request (e.g., duplicate version, activate version).
      operationId: getAsyncRequestStatus
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The ID of the asynchronous request.
      responses:
        '200':
          description: Success. Returns the current status of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
              examples:
                requestStatusExample:
                  summary: Example of a completed request status
                  value:
                    request_id: "4D114DAD97"
                    status: "done"
                    error_description: ""
                    error_code: null

  /api/v1/request/{request_id}/summary:
    get:
      tags:
        - Asynchronous Operations
      summary: Get Asynchronous Request Execution Summary
      description: Retrieves a summary of a completed asynchronous process, including success, error, and warning counts. This is particularly useful for operations like product catalog uploads.
      operationId: getAsyncRequestSummary
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
          description: The ID of the asynchronous request.
      responses:
        '200':
          description: Success. Returns the execution summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSummaryResponse'
              examples:
                requestSummaryExample:
                  summary: Example of a request summary with warnings
                  value:
                    status: "Completed"
                    summary:
                      success_count: 1
                      errors_count: 0
                      warnings:
                        - "Missing currency in price item for SKU KY014X, using default currency: USD"
                      errors: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: A secret token generated by a CPQ administrator.
  schemas:
    Version:
      type: object
      properties:
        name:
          type: string
          description: Name of the version.
        comment:
          type: string
          description: Comment provided during version creation.
        status:
          type: string
          description: Status of the version.
        version_id:
          type: string
          description: The unique identifier of the version.

    DuplicateVersionRequest:
      type: object
      required: [version_id, new_version_name]
      properties:
        version_id:
          type: string
          maxLength: 16
          description: ID of the version that should be duplicated.
        new_version_name:
          type: string
          maxLength: 120
          description: Name for the new version.
        comment:
          type: string
          maxLength: 4000
          description: Comments for the newly created version.
        to_account_instance:
          type: string
          description: Instance name of the Account where the version should be duplicated to (e.g., for Sandbox to Production).

    ActivateVersionRequest:
      type: object
      required: [version_id]
      properties:
        version_id:
          type: string
          maxLength: 16
          description: ID of the Version that should be activated.

    AsyncResponse:
      type: object
      properties:
        request_id:
          type: string
          description: The ID of the asynchronous request for tracking.

    Info:
      type: object
      properties:
        version_id:
          type: string
          description: The ID of the version for which products were retrieved.
        version_status:
          type: string
          description: The status of the version.
        compared_with_version_id:
          type: string
          description: The ID of the version that was replaced by this one upon activation.
        more_results_matching_the_request:
          type: boolean
          description: Flag indicating if more results are available for pagination.
        offset:
          type: string
          description: The offset used in the request.
        limit:
          type: string
          description: The limit used in the request.
        error:
          type: string
          description: Error message if not all requested data could be retrieved.

    ProductBasic:
      type: object
      properties:
        sku:  
          type: string 
          description: "Product catalog unique identifier." 
        name: 
          type: string 
          description: "Product name." 
        type: 
          type: string 
          enum: [PRODUCT, BUNDLE] 
          description: "Type of the product." 
        description: 
          type: string 
          description: "Product description." 
        price:
          type: object
          description: "List of price & currency pairs."
          additionalProperties: 
            type: string 
        attributes:
          type: array
          description: "List of all product attributes defined for the version."
          items:
            type: object
            additionalProperties: 
              type: string 
        bundle_items:
          type: array
          description: "List of Product SKUs in the bundle (if type is BUNDLE)."
          items: 
            type: string 

    VersionProductsResponse:
      type: object
      properties:
        info: 
          $ref: '#/components/schemas/Info' 
        products:
          type: array
          items: 
            $ref: '#/components/schemas/ProductBasic' 

    ProductsBySkuRequest:
      type: object
      required: [sku]
      properties:
        version_id:
          type: string
          maxLength: 16
          description: ID of the version. If omitted, the active version is used.
        pricing_option:
          type: string
          enum: [MIN, MAX, FIRST]
          description: Specifies which price to return for SKUs with multiple fixed prices.
        sku:
          type: array
          items:
            type: string
            maxLength: 200
          description: List of SKUs to retrieve.

    ProductAttribute:
      type: object
      properties:
        type:
          type: string
          enum: [DATE, TEXT, TEXT_LIST, NUMBER, BOOLEAN, COGS]
        value:
          type: string

    ProductFactor:
      type: object
      properties:
        name:
          type: string
          description: The name of the factor.
        value:
          type: string
          default: "1"
          description: Factor value.
        applicable:
          type: boolean
          default: false
          description: Indicates if the factor is applicable in the context of the assignment rule.

    ProposalAttribute:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
          description: The name of the proposal attribute.
        value:
          type: string
          maxLength: 2000
          description: Attribute value.
        applicable:
          type: boolean
          default: false
          description: Indicates if the attribute is applicable in the context of the assignment rule.

    VolumeDiscount:
      type: object
      description: A map of factor names to volume discount table names.
      example:
        Quantity: "VolD1"
        Duration: "VolD2"
      additionalProperties:
        type: string

    PricingRule:
      type: object
      properties:
        playbook: 
          type: string 
          description: "The name of the playbook where this rule should be evaluated." 
        ordinal: 
          type: integer 
          description: "The order in which the rule should be evaluated." 
        name: 
          type: string 
          maxLength: 256 
          description: "The name of the pricing rule." 
        rule: 
          type: string
          maxLength: 4096 
          description: "The business condition for 'ADVANCED' price format." 
        price: 
          type: string 
          maxLength: 4096 
          description: "The price amount or formula." 
        price_format: 
          type: string 
          enum: [BASIC, ADVANCED] 
          description: "Specifies if the rule is part of a basic or advanced pricing mode." 
        price_type: 
          type: string 
          enum: [SOLID, FROM_ALL_QUOTE, ITEM, GROUP, NEGATIVE, GROUP_NEGATIVE, ERP] 
          description: "The type of price calculation." 
        currency:  
          type: string 
          description: "Specifies currency handling (e.g., ISO code, EXCHANGE_RATE, NO_EXCHANGE_RATE)." 
        dynamic_price: 
          type: boolean 
          default: false 
          description: "Specifies if a seller can overwrite the list price." 
        rounding_policy: 
          type: string 
          description: "ID of a non-default rounding policy." 
        max_discount: 
          type: integer 
          minimum: 0 
          maximum: 100 
          description: "Maximum allowed discount percentage." 
        default_discount: 
          type: integer 
          minimum: 0 
          maximum: 100 
          description: "Default discount percentage." 
        apply_to: 
          type: string 
          enum: [ASSIGNMENT_RULES, GENERATED_ITEMS] 
          default: GENERATED_ITEMS 
          description: "Specifies if the rule applies to all assignments or specific ones." 
        apply_to_templates: 
          type: string 
          description: "Comma-separated list of assignment template names." 
        apply_to_rules: 
          type: string 
          description: "Comma-separated list of assignment rule names." 
        level:  
          type: integer 
          enum: [0, 1, 2] 
          default: 0 
          description: "The level to be included in the price calculation." 
        note: 
          type: string 
          maxLength: 4096 
          description: "A free text note for the rule." 
        based_of_tags:  
          type: string 
          description: "Comma-separated list of tags to calculate price from (for GROUP price types)." 
        based_of_price:  
          type: string 
          enum: [UNIT, NET, LIST, BOTH, USER, MSRP] 
          description: "Which price to use as a base for tag-based calculations."
        limit_type:  
          type: string 
          enum: [MIN, MAX, AS_IS, RANGE] 
          description: "The limit type for tag-based prices." 
        limit_min_value: 
          type: number
          description: "The minimum limit value for tag-based prices." 
        limit_max_value: 
          type: number 
          description: "The maximum limit value for tag-based prices." 
        disable_rounding: 
          type: boolean 
          description: "Specifies if rounding for the price should be disabled."
        include_positive: 
          type: boolean 
          description: "For GROUP_NEGATIVE price type, specifies if positive-priced products should be included in the calculation." 
        volume_discount: 
          $ref: '#/components/schemas/VolumeDiscount' 

    ProductPricing:
      type: object
      properties:
        advanced:
          type: boolean
          default: false
          description: "Set to `true` for advanced pricing policy, `false` for basic."
        pricing_rules:
          type: array
          items: 
            $ref: '#/components/schemas/PricingRule' 

    AssignmentRule:
      type: object
      properties:
        ordinal: 
          type: integer 
          description: "The order in which the rule is evaluated." 
        name: 
          type: string
          maxLength: 200 
          description: "The name of the assignment rule." 
        rule: 
          type: string 
          maxLength: 2048 
          default: "false" 
          description: "The business condition that triggers the rule." 
        note: 
          type: string 
          maxLength: 4096 
          description: "A free text note." 
        product_factors:
          type: array
          items: 
            $ref: '#/components/schemas/ProductFactor' 
          maxItems: 4
          description: "List of product factors for this rule."
        proposal_attributes:
          type: array
          items: 
            $ref: '#/components/schemas/ProposalAttribute' 
          description: "List of proposal attributes for this rule."

    ProductAssignment:
      type: object
      properties:
        assignment:
          type: string
          enum: [RULE_BASED, ALWAYS, NEVER]
          default: NEVER
          description: "Directive for the product assignment."
        playbook:
          type: string
          description: "The name of the playbook to which the assignment rules apply."
        assignment_rules:
          type: array
          items: 
            $ref: '#/components/schemas/AssignmentRule' 
        assignment_templates:
          type: array
          items: 
            type: string 

    ConditionalName:
      type: object
      properties:
        playbook: 
          type: string 
          description: "The name of the playbook." 
        ordinal: 
          type: integer
          description: "The evaluation order of the rule." 
        rule: 
          type: string
          maxLength: 2048
          description: "The business condition." 
        name: 
          type: string 
          maxLength: 400 
          description: "The conditional name to be assigned to the product." 
        description:  
          type: string 
          maxLength: 8192
          description: "The conditional description to be assigned." 

    InheritedAttribute:
      type: object
      properties:
        name:
          type: string
          description: The name of the proposal attribute.
        inherit:
          type: boolean
          description: Set to true to inherit the value from the bundle attribute.

    BundleItem:
      type: object
      properties:
        sku:  
          type: string 
          description: "The unique identifier of the product in the catalog." 
        ordinal: 
          type: integer
          default: 0 
          description: "The order of the product in the bundle." 
        how_to_add: 
          type: string 
          enum: [AUTOMATIC, MANUAL, COMBINED] 
          description: "Specifies how the product should be managed within the bundle." 
        enable_modify_factors: 
          type: boolean 
          description: "Specifies if the seller can modify bundled product factors." 
        product_factors:
          type: array
          items:  
            $ref: '#/components/schemas/ProductFactor' 
        inherit_proposal_attributes:
          type: array
          items:
            $ref: '#/components/schemas/InheritedAttribute'
          description: "List of attributes that should inherit their value from the parent bundle."


    ProductCatalogItem:
      type: object
      properties:
        sku: 
          type: string 
          maxLength: 200 
        name: 
          type: string 
          maxLength: 400 
        description: 
          type: string
          maxLength: 21844 
        tags: 
          type: array
          items: 
            type: string 
            maxLength: 200 
        primary_tag: 
          type: string 
          maxLength: 200 
        merge_products: 
          type: boolean 
          default: false 
        product_attributes:
          type: object
          additionalProperties: 
            $ref: '#/components/schemas/ProductAttribute' 
        product_assignments:
          type: array
          items: 
            $ref: '#/components/schemas/ProductAssignment' 
        product_pricing: 
          $ref: '#/components/schemas/ProductPricing' 
        product_conditional_names:
          type: array
          items: 
            $ref: '#/components/schemas/ConditionalName' 

    BundleCatalogItem:
      allOf:
        - $ref: '#/components/schemas/ProductCatalogItem'
        - type: object
          properties:
            bundle_type: 
              type: string
              enum: [FIXED_PRICE, PRODUCT_SUMMARY] 
              default: PRODUCT_SUMMARY 
            price_in_bundle_is_zero: 
              type: boolean
              default: false 
            sync_to_crm: 
              type: boolean
              default: false 
            sync_bundle_price: 
              type: boolean
              default: false 
            bundle_items:
              type: array
              items: 
                $ref: '#/components/schemas/BundleItem' 

    ProductHierarchyNode:
      type: object
      properties:
        nameOrSku:
          type: string
          description: The SKU of the product/bundle or the name of the label.
        type:
          type: string
          enum: [PRODUCT, BUNDLE, LABEL]
          description: The type of the hierarchy item.
        mandatory:
          type: boolean
          description: Whether the item is mandatory.
        alternative:
          type: boolean
          description: Whether the item is an alternative choice.
        children:
          type: array
          items:
            $ref: '#/components/schemas/ProductHierarchyNode'
          description: A nested list of child items.

    ProductCatalogGetResponse:
      type: object
      properties:
        info: 
          $ref: '#/components/schemas/Info'
        products:
          type: array
          items: 
            $ref: '#/components/schemas/ProductCatalogItem' 
        bundles:
          type: array
          items: 
            $ref: '#/components/schemas/BundleCatalogItem' 

    ProductCatalogPostRequest:
      type: object
      properties:
        products:
          type: array
          items: 
            $ref: '#/components/schemas/ProductCatalogItem' 
        bundles:
          type: array
          items: 
            $ref: '#/components/schemas/BundleCatalogItem'

    RequestStatus:
      type: object
      properties:
        request_id: 
          type: string
          description: "ID of the asynchronous request." 
        status: 
          type: string
          enum: ["in-progress", "done", "failed"]
          description: "Status of the asynchronous request." 
        error_description: 
          type: string
          description: "Description of the error if the status is 'failed'." 
        error_code: 
          type: string
          description: "Code of the error if the status is 'failed'." 

    RequestSummary:
      type: object
      properties:
        success_count: 
          type: integer
          description: "The number of successfully processed records." 
        errors_count: 
          type: integer
          description: "The number of records that could not be processed." 
        warnings: 
          type: array
          items: 
            type: string
            description: "List of warnings that occurred during execution." 
        errors: 
          type: array
          items: 
            type: string 
          description: "List of errors that occurred during execution." 

    RequestSummaryResponse:
      type: object
      properties:
        status: 
          type: string
          enum: ["In Progress", "Completed", "Error"]
          description: "The status of the asynchronous request." 
        summary: 
          $ref: '#/components/schemas/RequestSummary' 

