openapi: 3.0.3
info:
  title: DealHub Pricing API
  description: |-
    This API provides services to calculate prices for a given list of product SKUs. It involves a two-step process:
    1.  **Get Products Parameters:** First, call the `/api/v1/products/parameters` endpoint with a list of SKUs to determine the specific "product factors" and "parameters" required to calculate a price for each one.
    2.  **Get Products Pricing:** Next, call the `/api/v1/products/pricing` endpoint, providing the SKUs along with the required parameters (and their values) obtained from the first call. This will return the calculated price for each SKU.

    All requests require a secret Bearer Token in the `Authorization` header.
  version: 1.0.0
servers:
  - url: https://{your-dealhub-instance}.dealhub.io
    description: The base URL for your DealHub instance.
    variables:
      your-dealhub-instance:
        default: app
        description: Your specific DealHub instance name (e.g., 'app', 'service-eu1').

security:
  - bearerAuth: []

paths:
  /api/v1/products/parameters:
    post:
      summary: Get Products Parameters
      description: Retrieves the list of parameters required to calculate the price for one or more product SKUs.
      operationId: getProductsParameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParametersRequest'
      responses:
        '200':
          description: Success. Returns the required parameters for each SKU.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParametersResponse'
        '400':
          description: Bad Request. The request is malformed or missing required information (e.g., version not found, playbook required but not provided).
        '403':
          description: Forbidden. The authentication token is missing or invalid.

  /api/v1/products/pricing:
    post:
      summary: Get Products Pricing
      description: Calculates and returns the price for one or more product SKUs based on the provided parameters.
      operationId: getProductsPricing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricingRequest'
      responses:
        '200':
          description: Success. Returns the calculated price for each SKU.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingResponse'
        '400':
          description: Bad Request. The request is malformed or a SKU could not be found.
        '403':
          description: Forbidden. The authentication token is missing or invalid.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: A secret token generated by a CPQ administrator.

  schemas:
    ParametersRequest:
      type: object
      properties:
        currency:
          type: string
          description: The currency ISO code to evaluate rules upon.
        geo:
          type: string
          description: The geography to be used for the pricing calculation.
        version:
          type: string
          description: The name of the version to use. If omitted, the active version is used.
        playbook:
          type: string
          description: The unique name of the playbook to use.
        skus:
          type: array
          items:
            type: string
      required:
        - currency
        - geo
        - skus

    ParametersResponse:
      type: object
      properties:
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuParameters'

    SkuParameters:
      type: object
      properties:
        sku:
          type: string
        parameters_for:
          type: object
          properties:
            product_factors:
              type: array
              items:
                $ref: '#/components/schemas/ParameterDefinition'
            parameters:
              type: array
              items:
                $ref: '#/components/schemas/ParameterDefinition'

    ParameterDefinition:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [number, text]

    PricingRequest:
      type: object
      properties:
        currency:
          type: string
        geo:
          type: string
        version:
          type: string
        playbook:
          type: string
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuPricingRequest'
      required:
        - currency
        - geo
        - skus

    SkuPricingRequest:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for the SKU in this request, which will be echoed in the response.
        sku:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterValue'
      required:
        - id
        - sku
        - parameters

    ParameterValue:
      type: object
      properties:
        name:
          type: string
        value:
          oneOf:
            - type: string
            - type: number
      required:
        - name
        - value

    PricingResponse:
      type: object
      properties:
        currency:
          type: string
        version:
          type: string
        playbook:
          type: string
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuPrice'

    SkuPrice:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier that was passed in the request.
        sku:
          type: string
        price:
          type: number
          description: The calculated price per unit. Returns 0 if there was an error.
        error:
          type: string
          description: An error message if the price could not be calculated.
